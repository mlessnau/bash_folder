#!/usr/bin/env ruby

require 'date'

commands = {
  :start  => {:description => 'Starts a task',            :identifier_required => true},
  :stop   => {:description => 'Stops a task',             :identifier_required => true},
  :pause  => {:description => 'Pauses a task',            :identifier_required => true},
  :resume => {:description => 'Resumes a paused task',    :identifier_required => true},
  :status => {:description => 'Shows status information', :identifier_required => false},
  :help   => {:description => 'Shows this help',          :identifier_required => false}
}

def print_usage(commands)
  puts 'Usage: jikan [command] [identifier]'
  puts 'Commands:'
  commands.each do |command, data|
    puts "  #{command} - #{data[:description]}"
  end
end

command = ARGV[0] ? ARGV[0].to_sym : nil
identifier = ARGV[1] ? ARGV[1] : nil

if ARGV.empty? || 'help' == ARGV[0]
  print_usage(commands)
  exit 1
end

if !command
  puts 'No command given'
  print_usage(commands)
  exit
elsif !commands[command]
  puts 'Unknown command'
  print_usage(commands)
  exit 1
elsif !identifier && commands[command][:identifier_required]
  puts 'This command requires an identifier'
  print_usage(commands)
  exit 1
end

timestamp = DateTime.now

case command
when :start then
  log_entry = "#{timestamp};start;#{identifier}"
when :stop then
  log_entry = "#{timestamp};stop;#{identifier}"
when :pause then
  log_entry = "#{timestamp};pause;#{identifier}"
when :resume then
  log_entry = "#{timestamp};resume;#{identifier}"
when :status then
else
  print_usage(commands)
end

puts log_entry if log_entry
