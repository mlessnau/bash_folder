#!/usr/bin/env bash

REMOTES=`git remote show`

if [ $? -ne 0 ]; then
  exit 1
fi

CURRENT_BRANCH=`git branch | sed "s/^ *//g" | egrep "^\* " | sed "s/^\* *//g"`
echo "Currently on branch '$CURRENT_BRANCH' (cannot delete this one)"

LOCAL_BRANCHES=`git branch | sed "s/^ *//g" | egrep -v "^\* "`

for REMOTE in $REMOTES; do
  echo "Fetching branches from remote '$REMOTE' ..."
  git fetch $REMOTE

  echo "Pruning remote tracking branches for '$REMOTE' ..."
  git remote prune $REMOTE

  REMOTE_BRANCHES=`git branch -r | sed "s/^ *//g" | egrep -v "^$REMOTE/HEAD -> " | egrep "^$REMOTE/" | sed "s/^$REMOTE\///g"`

  LOCAL_BRANCHES_TO_DELETE=()

  for LOCAL_BRANCH in $LOCAL_BRANCHES; do
    IS_VALID_TRACKING_BRANCH=0

    for REMOTE_BRANCH in $REMOTE_BRANCHES; do
      if [ $LOCAL_BRANCH == $REMOTE_BRANCH ]; then
        IS_VALID_TRACKING_BRANCH=1
        break
      fi
    done

    if [ $IS_VALID_TRACKING_BRANCH -eq 0 ]; then
      LOCAL_BRANCHES_TO_DELETE+=($LOCAL_BRANCH)
    fi
  done

  LOCAL_BRANCHES=$LOCAL_BRANCHES_TO_DELETE
done

LOCAL_BRANCHES_TO_DELETE=()

for LOCAL_BRANCH in $LOCAL_BRANCHES; do
  read -r -p "Delete local branch '$LOCAL_BRANCH'? [Y/n] " CONFIRMATION

  if [[ ${CONFIRMATION,,} =~ ^\s*(y|)\s*$ ]]; then
    LOCAL_BRANCHES_TO_DELETE+=($LOCAL_BRANCH)
  fi
done

if [ ${#LOCAL_BRANCHES_TO_DELETE[@]} -gt 0 ]; then
  echo "The following local branches will be deleted:"

  for LOCAL_BRANCH in $LOCAL_BRANCHES_TO_DELETE; do
    echo "  $LOCAL_BRANCH"
  done

  read -r -p "Are you sure? [y/N] " CONFIRMATION

  if [[ ${CONFIRMATION,,} =~ ^\s*(y)\s*$ ]]; then
    for LOCAL_BRANCH in $LOCAL_BRANCHES_TO_DELETE; do
      git branch -D $LOCAL_BRANCH
    done
  else
    echo "CANCELLED"
    exit 0
  fi
else
  LOCAL_BRANCHES_TO_DELETE=()
fi

echo "DELETED ${#LOCAL_BRANCHES_TO_DELETE[@]} LOCAL BRANCH(ES)"

exit 0
